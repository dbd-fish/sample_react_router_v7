services:
  frontend:
    build:
      context: ./sample_frontend_container
      dockerfile: Dockerfile
    container_name: sample_frontend_container2
    image: sample_frontend_container
    deploy:
      resources:
        limits:
          memory: 8G
    volumes:
      - ./sample_frontend_container:/app
    ports:
      - "3000:3000" # 本番用
      - "5173:5173" # 開発用
    tty: true   # コンテナをデバッグ用に起動状態に保つ場合は設定
    # 下記は開発用
    # command: ["npm", "run", "dev"]
    networks:
      - app-network    # この行を追加
#   backend:
#     container_name: sample_backend_container
#     image: sample_backend_image
#     build:
#       context: ./sample_backend_container
#       dockerfile: Dockerfile
#     volumes:
#       - ./sample_backend_container:/app
#     command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
#     working_dir: /app
#     ports:
#       - 8000:8000
#     tty: true
#     depends_on:
#       - db


#   db:
#     image: postgres:13
#     container_name: postgres_db
#     environment:
#       POSTGRES_DB: sample_db
#       POSTGRES_USER: sample_user
#       POSTGRES_PASSWORD: sample_password
#       TZ: Asia/Tokyo
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#       # テスト用のDB構築スクリプト
#       - ./init-scripts:/docker-entrypoint-initdb.d
#     ports:
#       - "5432:5432"

# volumes:
#   postgres_data:

  cypress:
    build:
      context: ./cypress_container
      dockerfile: Dockerfile
    image: cypress/included:13.17.0
    container_name: cypress_container
    # environment:
    #   DISPLAY:  ${DISPLAY} # NOTE: GUIによるCypress起動ができないため保留とする
    volumes:
      - ./cypress_container:/e2e # テストコードをマウント
      - /tmp/.X11-unix:/tmp/.X11-unix # Xサーバーソケットを共有
    depends_on:
      - frontend
    networks:
      - app-network
    tty: true
    stdin_open: true

networks:
  app-network:
    driver: bridge
